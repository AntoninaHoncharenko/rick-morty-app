{"version":3,"file":"static/js/510.a34994c1.chunk.js","mappings":"8MAEAA,EAAAA,EAAAA,SAAAA,QAAyB,kCAWlB,IAAMC,EAAqB,mCAAG,WAAOC,EAAcC,GAArB,gGAEVH,EAAAA,EAAAA,IAAA,2BAA8BE,EAA9B,iBAA2CC,IAFjC,cAE3BC,EAF2B,yBAG1BA,EAASC,MAHiB,gCAKjCC,QAAQC,IAAI,KAAMC,SALe,yDAAH,wDASrBC,EAAkB,mCAAG,WAAOC,GAAP,gGAEPV,EAAAA,EAAAA,IAAA,qBAAwBU,IAFjB,cAExBN,EAFwB,yBAGvBA,EAASC,MAHc,gCAK9BC,QAAQC,IAAI,KAAMC,SALY,yDAAH,qD,yMCnBlBG,EAAYC,EAAAA,GAAAA,IAAH,6LAWTC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kEAKRG,EAAWH,EAAAA,GAAAA,EAAH,gIAQRI,EAAOJ,EAAAA,GAAAA,IAAH,gKAUJK,EAAQL,EAAAA,GAAAA,IAAH,2PAcLM,EAAON,EAAAA,GAAAA,EAAH,8PAcJO,EAAOP,EAAAA,GAAAA,EAAH,gQAcJQ,EAAWR,EAAAA,GAAAA,GAAH,iIASRS,EAAWT,EAAAA,GAAAA,GAAH,uLAWRU,EAAYV,EAAAA,GAAAA,EAAH,qIAQTW,EAAWX,EAAAA,GAAAA,EAAH,gH,SCzBrB,EA9D8B,WAAO,IAAD,IAClC,GAAkCY,EAAAA,EAAAA,UAAuB,MAAzD,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAsBC,EAAAA,EAAAA,MACtBpB,EAAKiB,GAAkB,GAe7B,IAbAI,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBtB,EAAAA,EAAAA,GAAmBC,GAF1C,OAEUL,EAFV,OAGIqB,EAAarB,GAHjB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdyB,EACD,GAAE,CAACtB,KAECe,EACH,OAAO,KAGT,IAAQQ,EAAuDR,EAAvDQ,MAAO/B,EAAgDuB,EAAhDvB,KAAMgC,EAA0CT,EAA1CS,OAAQC,EAAkCV,EAAlCU,QAASC,EAAyBX,EAAzBW,OAAQC,EAAiBZ,EAAjBY,KAAMC,EAAWb,EAAXa,OAEpD,OACE,UAAC3B,EAAD,YACE,UAACE,EAAD,CAAU0B,GAAE,oBAAEV,EAASW,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,QAAtC,WACE,SAAC,MAAD,CAAgBC,KAAK,KAAKC,MAAM,aAChC,SAAC5B,EAAD,0BAEF,UAACC,EAAD,YACE,SAACC,EAAD,CAAO2B,IAAKX,EAAOY,IAAI,UACvB,SAAC3B,EAAD,UAAOhB,KACP,SAACiB,EAAD,4BACA,UAACC,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWa,QAEb,UAACf,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWW,QAEb,UAACb,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWY,QAEb,UAACd,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,UAAWe,EAAOpC,WAEpB,UAACmB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,UAAWc,GAAc,uBAMpC,C","sources":["api.ts","pages/HeroDetails/HeroDetails.styled.ts","pages/HeroDetails/HeroDetails.tsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\n// export const fetchAllCharacters = async (page: number) => {\n//   try {\n//     const response = await axios.get(`/character/?page=${page}}`);\n//     return response.data;\n//   } catch (error: any) {\n//     console.log(error.message);\n//   }\n// };\n\nexport const fetchCharactersByName = async (name: string, page: number) => {\n  try {\n    const response = await axios.get(`/character/?name=${name}&page=${page}`);\n    return response.data;\n  } catch (error: any) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchOneCharacters = async (id: string) => {\n  try {\n    const response = await axios.get(`/character/${id}`);\n    return response.data;\n  } catch (error: any) {\n    console.log(error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 332px;\n  padding: 23px 10px 85px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1050px) {\n    width: 1050px;\n    padding: 21px 15px 142px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n`;\n\nexport const BackText = styled.p`\n  margin-left: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 21px;\n  color: #000000;\n`;\n\nexport const Wrap = styled.div`\n  width: 312px;\n  margin: 77px auto 0;\n\n  @media screen and (min-width: 1050px) {\n    width: 413px;\n    margin: 31px auto 0;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  height: 148px;\n  border: 5px solid #f2f2f7;\n  border-radius: 50%;\n  margin: 0 auto 34px;\n\n  @media screen and (min-width: 1050px) {\n    width: 300px;\n    height: 300px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 32px;\n  line-height: 38px;\n  color: #081f32;\n  text-align: center;\n  margin-bottom: 35px;\n\n  @media screen and (min-width: 1050px) {\n    font-size: 48px;\n    line-height: 56px;\n    margin-bottom: 48px;\n  }\n`;\n\nexport const Info = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #8e8e93;\n  text-align: center;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const InfoList = styled.ul`\n  margin: 0 auto;\n  width: 298px;\n\n  @media screen and (min-width: 1050px) {\n    width: 395px;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  width: 298px;\n  height: 64px;\n  padding: 9px 0;\n  border-bottom: 1px solid #6e798c;\n\n  @media screen and (min-width: 1050px) {\n    width: 395px;\n  }\n`;\n\nexport const InfoTitle = styled.p`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0.15px;\n  color: #081f32;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.25px;\n  color: #6e798c;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BiLeftArrowAlt } from 'react-icons/bi';\nimport { fetchOneCharacters } from 'api';\nimport {\n  Container,\n  BackLink,\n  BackText,\n  Wrap,\n  Image,\n  Name,\n  Info,\n  InfoList,\n  InfoItem,\n  InfoTitle,\n  InfoText,\n} from './HeroDetails.styled';\nimport { IHero } from 'types/heroDetailsType';\nimport { ILocation } from 'types/locationType';\n\nconst HeroDetails: React.FC = () => {\n  const [character, setCharacter] = useState<IHero | null>(null);\n  const { heroId } = useParams<string>();\n  const location: ILocation = useLocation();\n  const id = heroId ? heroId : '';\n\n  useEffect(() => {\n    async function getOneCharacters() {\n      try {\n        const data = await fetchOneCharacters(id);\n        setCharacter(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getOneCharacters();\n  }, [id]);\n\n  if (!character) {\n    return null;\n  }\n\n  const { image, name, status, species, gender, type, origin } = character;\n\n  return (\n    <Container>\n      <BackLink to={location.state?.from ?? '/main'}>\n        <BiLeftArrowAlt size=\"32\" color=\"#000000\" />\n        <BackText>GO BACK</BackText>\n      </BackLink>\n      <Wrap>\n        <Image src={image} alt=\"hero\" />\n        <Name>{name}</Name>\n        <Info>Informations</Info>\n        <InfoList>\n          <InfoItem>\n            <InfoTitle>Gender</InfoTitle>\n            <InfoText>{gender}</InfoText>\n          </InfoItem>\n          <InfoItem>\n            <InfoTitle>Status</InfoTitle>\n            <InfoText>{status}</InfoText>\n          </InfoItem>\n          <InfoItem>\n            <InfoTitle>Specie</InfoTitle>\n            <InfoText>{species}</InfoText>\n          </InfoItem>\n          <InfoItem>\n            <InfoTitle>Origin</InfoTitle>\n            <InfoText>{origin.name}</InfoText>\n          </InfoItem>\n          <InfoItem>\n            <InfoTitle>Type</InfoTitle>\n            <InfoText>{type ? type : 'Unknown'}</InfoText>\n          </InfoItem>\n        </InfoList>\n      </Wrap>\n    </Container>\n  );\n};\n\nexport default HeroDetails;\n"],"names":["axios","fetchCharactersByName","name","page","response","data","console","log","message","fetchOneCharacters","id","Container","styled","BackLink","Link","BackText","Wrap","Image","Name","Info","InfoList","InfoItem","InfoTitle","InfoText","useState","character","setCharacter","heroId","useParams","location","useLocation","useEffect","getOneCharacters","image","status","species","gender","type","origin","to","state","from","size","color","src","alt"],"sourceRoot":""}