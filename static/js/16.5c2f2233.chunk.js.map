{"version":3,"file":"static/js/16.5c2f2233.chunk.js","mappings":"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","sources":["api.ts","components/HeroImage/HeroImage.styled.ts","components/HeroImage/HeroImage.tsx","components/HerosFinder/HeroFinder.styled.ts","components/HerosFinder/HeroFinder.tsx","components/Pagination/Pagination.styled.ts","components/Pagination/Pagination.tsx","components/HeroList/HeroList.styled.ts","components/HeroList/HeroList.tsx","pages/MainPage/MainPage.styled.ts","pages/MainPage/MainPage.tsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\nexport const fetchCharactersByName = async (name: string, page: number) => {\n  try {\n    const response = await axios.get(`/character/?name=${name}&page=${page}`);\n    return response.data;\n  } catch (error: any) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchOneCharacters = async (id: string) => {\n  try {\n    const response = await axios.get(`/character/${id}`);\n    return response.data;\n  } catch (error: any) {\n    console.log(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  margin: 0 auto 32px;\n  width: 312px;\n\n  @media screen and (min-width: 1050px) {\n    margin: 0 auto 16px;\n    width: 600px;\n  } ;\n`;\n","import image from '../../images/heroimg.png';\nimport { Image } from './HeroImage.styled';\n\nexport const HeroImage: React.FC = () => {\n  return <Image src={image} alt=\"RickAndMotry\" />;\n};\n","import styled from 'styled-components';\n\nexport const Finder = styled.input`\n  width: 312px;\n  height: 56px;\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  padding: 16px 16px 16px 46px;\n\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.5);\n\n  ::placeholder {\n    margin-left: 28px;\n  }\n\n  @media screen and (min-width: 1050px) {\n    width: 1020px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n\n  svg {\n    position: absolute;\n    bottom: 50%;\n    top: 20px;\n    left: 20px;\n  }\n\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 1050px) {\n    margin-bottom: 61px;\n  }\n`;\n","import { AiOutlineSearch } from 'react-icons/ai';\nimport { Finder, Wrap } from './HeroFinder.styled';\n\ninterface IProps {\n  onChange: (event: any) => void;\n  query: string;\n}\n\nexport const HeroFinder: React.FC<IProps> = ({ onChange, query }) => {\n  return (\n    <>\n      <Wrap>\n        <AiOutlineSearch size=\"18\" color=\"rgba(0, 0, 0, 0.54)\" />\n        <Finder\n          type=\"text\"\n          placeholder=\"Filter by name...\"\n          value={query}\n          onChange={onChange}\n        />\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Currentpage = styled.p`\n  font-size: 28px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  text-align: center;\n  padding: 0;\n  width: 45px;\n  height: 45px;\n\n  :hover:not(:disabled) {\n    background-color: rgb(195, 251, 154);\n  }\n`;\n","import {\n  MdKeyboardDoubleArrowRight,\n  MdKeyboardDoubleArrowLeft,\n  MdKeyboardArrowRight,\n  MdKeyboardArrowLeft,\n} from 'react-icons/md';\n\nimport { Wrap, Currentpage, Button } from './Pagination.styled';\n\ninterface IProps {\n  toNextPage: () => void;\n  toPrevPage: () => void;\n  toStart: () => void;\n  toEnd: () => void;\n  page: number;\n  totalPages: number;\n}\n\nexport const Pagination: React.FC<IProps> = ({\n  toStart,\n  toPrevPage,\n  toNextPage,\n  toEnd,\n  page,\n  totalPages,\n}) => {\n  return (\n    <Wrap>\n      <Button onClick={toStart} disabled={page === 1 ? true : false}>\n        <MdKeyboardDoubleArrowLeft size=\"36\" />\n      </Button>\n      <Button onClick={toPrevPage} disabled={page > 1 ? false : true}>\n        <MdKeyboardArrowLeft size=\"36\" />\n      </Button>\n      <Currentpage>{page}</Currentpage>\n      <Button\n        onClick={toNextPage}\n        disabled={page === totalPages ? true : false}\n      >\n        <MdKeyboardArrowRight size=\"36\" />\n      </Button>\n      <Button onClick={toEnd} disabled={page === totalPages ? true : false}>\n        <MdKeyboardDoubleArrowRight size=\"36\" />\n      </Button>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  @media screen and (min-width: 1050px) {\n    display: flex;\n    gap: 24px 20px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Card = styled.li`\n  width: 312px;\n  height: 100%;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12),\n    0px 2px 4px rgba(0, 0, 0, 0.14);\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 1050px) {\n    width: 240px;\n    flex-grow: 1;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 312px;\n  height: 232px;\n  object-fit: cover;\n\n  @media screen and (min-width: 1050px) {\n    width: 240px;\n    height: 168px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  padding: 12px 16px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 30px;\n  letter-spacing: 0.15px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-bottom: 1px;\n`;\n\nexport const Text = styled.p`\n  line-height: 21px;\n  letter-spacing: 0.25px;\n  color: rgba(0, 0, 0, 0.6);\n`;\n","import { Link } from 'react-router-dom';\nimport { List, Card, Image, Wrap, Name, Text } from './HeroList.styled';\nimport { IHero } from 'types/heroTypes';\n\ninterface IProps {\n  characters: IHero[];\n}\n\nexport const CharactersList: React.FC<IProps> = ({ characters }) => {\n  return (\n    <>\n      <List>\n        {characters?.map(char => {\n          const { id, image, name, species } = char;\n          return (\n            <Link to={`/${id}`} key={id}>\n              <Card>\n                <Image src={image} alt=\"heroimage\" />\n                <Wrap>\n                  <Name>{name}</Name>\n                  <Text>{species}</Text>\n                </Wrap>\n              </Card>\n            </Link>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 332px;\n  padding: 23px 10px 42px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1050px) {\n    width: 1050px;\n    padding: 21px 15px 188px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const BackText = styled.p`\n  margin-left: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 21px;\n  color: #000000;\n`;\n\nexport const UserName = styled.p`\n  font-size: 22px;\n  margin-bottom: 55px;\n`;\n","import { useState, useEffect } from 'react';\nimport { HeroImage } from 'components/HeroImage/HeroImage';\nimport { HeroFinder } from 'components/HerosFinder/HeroFinder';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport { fetchCharactersByName } from 'api';\nimport { CharactersList } from 'components/HeroList/HeroList';\nimport { Container, BackLink, BackText, UserName } from './MainPage.styled';\nimport { BiLeftArrowAlt } from 'react-icons/bi';\nimport { UserAuth } from 'context/AuthContext';\nimport { IHero } from 'types/heroTypes';\n\nconst MainPage: React.FC = () => {\n  // const [characters, setCharacters] = useState<IHero[]>([]);\n  const [filteredCharacters, setFilteredCharacters] = useState<IHero[]>([]);\n  const [query, setQuery] = useState<string>(\n    localStorage.getItem('query') || ''\n  );\n  const [totalPages, setTotalPages] = useState<number>(0);\n  const [page, setPage] = useState<number>(\n    Number(localStorage.getItem('page')) || 1\n  );\n\n  const { user, logOut } = UserAuth();\n\n  // useEffect(() => {\n  //   async function getAllCharacters() {\n  //     try {\n  //       const data = await fetchAllCharacters(page);\n  //       const sortedData = data.results.sort((a: IHero, b: IHero) =>\n  //         a.name.localeCompare(b.name)\n  //       );\n  //       setCharacters(sortedData);\n  //       // setTotalPages(data.info.pages);\n  //       // localStorage.setItem('page', page.toString());\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n\n  //   getAllCharacters();\n  // }, [page]);\n\n  useEffect(() => {\n    if (localStorage.getItem('query') !== query) {\n      setPage(1);\n    }\n\n    async function getCharactersByName() {\n      try {\n        const data = await fetchCharactersByName(query, page);\n        const sortedData = data.results.sort((a: IHero, b: IHero) =>\n          a.name.localeCompare(b.name)\n        );\n        setFilteredCharacters(sortedData);\n        setTotalPages(data.info.pages);\n\n        localStorage.setItem('query', query);\n        localStorage.setItem('page', page.toString());\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCharactersByName();\n  }, [query, page]);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleLogOut = async () => {\n    try {\n      await logOut();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const toNextPage = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const toPrevPage = () => {\n    setPage(prevState => prevState - 1);\n  };\n\n  const toStart = () => {\n    setPage(1);\n  };\n\n  const toEnd = () => {\n    setPage(totalPages);\n  };\n\n  return (\n    <Container>\n      <BackLink to=\"/\" onClick={handleLogOut}>\n        <BiLeftArrowAlt size=\"32\" color=\"#000000\" />\n        <BackText>LOG OUT</BackText>\n      </BackLink>\n      {user && <UserName>Hello, {user}!</UserName>}\n      <HeroImage />\n      <HeroFinder onChange={onChange} query={query} />\n      <CharactersList characters={filteredCharacters} />\n      <Pagination\n        toNextPage={toNextPage}\n        page={page}\n        toPrevPage={toPrevPage}\n        toStart={toStart}\n        toEnd={toEnd}\n        totalPages={totalPages}\n      />\n    </Container>\n  );\n};\nexport default MainPage;\n"],"names":["axios","fetchCharactersByName","name","page","response","data","console","log","message","fetchOneCharacters","id","Image","styled","HeroImage","src","image","alt","Finder","Wrap","HeroFinder","onChange","query","size","color","type","placeholder","value","Currentpage","Button","Pagination","toStart","toPrevPage","toNextPage","toEnd","totalPages","onClick","disabled","List","Card","Name","Text","CharactersList","characters","map","char","species","to","Container","BackLink","Link","BackText","UserName","useState","filteredCharacters","setFilteredCharacters","localStorage","getItem","setQuery","setTotalPages","Number","setPage","UserAuth","user","logOut","useEffect","sortedData","results","sort","a","b","localeCompare","info","pages","setItem","toString","getCharactersByName","handleLogOut","event","target","prevState"],"sourceRoot":""}